FROM debian:buster-slim
RUN mkdir -p /usr/share/man/man1 /usr/share/man/man2

RUN apt-get update && \
apt-get install -y --no-install-recommends make build-essential libssl-dev  wget curl llvm libidn11 openjdk-11-jre git nano && \
apt-get install -y git && \
apt-get install sudo && \
apt-get install -y tcsh

ARG USER=docker
ARG UID=1000
ARG GID=1000
# default password for user
ARG PW=docker
# Using unencrypted password/ specifying password
RUN useradd --no-log-init -m ${USER} --uid=${UID} && echo "${USER}:${PW}" | \
      chpasswd
# RUN usermod -aG sudo ${USER}
# Setup default user, when enter docker container
USER ${UID}:${GID}



WORKDIR /home/${USER}

ENV HOME="/home/$USER"

RUN git clone --depth=1 https://github.com/pyenv/pyenv.git .pyenv
ENV PYENV_ROOT="${HOME}/.pyenv" 
ENV PATH="${PYENV_ROOT}/shims:${PYENV_ROOT}/bin:${PATH}"

ENV PYTHON_VERSION=miniconda3-4.7.12
RUN pyenv install ${PYTHON_VERSION} && \
      pyenv global ${PYTHON_VERSION} && \
      curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python -

# COPY --chown=$USER:$USER . .
COPY --chown=$USER:$USER poetry.lock pyproject.toml ./
RUN /bin/bash -c 'source $HOME/.poetry/env && POETRY_VIRTUALENVS_IN_PROJECT=true poetry install --no-dev --no-root'


ENTRYPOINT [ "/bin/bash" ]


